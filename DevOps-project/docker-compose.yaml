version: '3.8'
services:

  flask_app:
    build:
      context: ./polybot
      dockerfile: Dockerfile
    image: flask-server
    ports:
      - 8443:8443
    environment:
      - TELEGRAM_APP_URL=${TELEGRAM_APP_URL}
      - BUCKET_NAME=${BUCKET_NAME}
      - YOLO_IP_SERVICE=${YOLO_IP_SERVICE}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
 

  yolo_service:
    build: 
      context: ./yolo
      dockerfile: Dockerfile
    image: yolo-service
    ports:
      - 8081:8081
    environment:
      - BUCKET_NAME=${BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}

  mongo1:
    image: mongo:5
    container_name: mongo1
    ports:
      - "27017:27017"
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo1
    #docker run -v db-data:/data/db
    volumes:
      - db-data-m1:/data/db #Named volumes

  mongo2:
    image: mongo:5
    container_name: mongo2
    ports:
      - "27018:27017"
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo2
    #docker run -v db-data:/data/db
    volumes:
      - db-data-m2:/data/db #Named volumes

  mongo3:
    image: mongo:5
    container_name: mongo3
    ports:
      - "27019:27017"
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo3
    #docker run -v db-data:/data/db
    volumes:
      - db-data-m3:/data/db #Named volumes

  init-replica-set:
    image: mongo:5
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      bash -c 'sleep 10 &&
      mongo mongo1:27017 --eval "rs.initiate({
        _id: \"myReplicaSet\",
        members: [
          {_id: 0, host: \"mongo1:27017\"},
          {_id: 1, host: \"mongo2:27017\"},
          {_id: 2, host: \"mongo3:27017\"}
        ]
      })"'


volumes:
  db-data-m1:
  db-data-m2:
  db-data-m3:
